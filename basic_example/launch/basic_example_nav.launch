<launch>
  <!-- declare arg to be passed in -->
  <arg name="with_chest_xtion" default="false"/>
  <arg name="mon_nav_config_file"  default="" />
  <arg name="max_bumper_recoveries" default=".inf"/>
  <arg name="wait_reset_bumper_duration" default="0.0"/>
  <arg name="topological_navigation_retries" default="3"/>
  <arg name="topological_map_name" default="basic_map"/>
  <arg name="map" default="$(find strands_morse)/basic_example/maps/basic_map.yaml"/>

  <!-- 2D Navigation -->
  <include file="$(find strands_movebase)/launch/movebase.launch">
      <arg name="map" value="$(arg map)"/>
      <arg name="with_chest_xtion" value="$(arg with_chest_xtion)"/>
  </include>

  <node pkg="monitored_navigation" type="monitored_nav.py" name="monitored_nav" output="screen" args="$(arg mon_nav_config_file)">
    <param name="wait_reset_bumper_duration" value="$(arg wait_reset_bumper_duration)"/>
    <rosparam param="/monitored_navigation/recover_states/recover_bumper" subst_value="True">[True, $(arg max_bumper_recoveries)]</rosparam>
  </node>

  <node pkg="topological_navigation" type="map_manager.py" name="topological_map_manager" args="$(arg topological_map_name)" respawn="true"/>
  <node pkg="topological_navigation" name="topological_localisation" type="localisation.py" output="screen" respawn="true"/>
  <node pkg="topological_navigation" type="visualise_map.py" name="visualise_map" args="$(arg topological_map_name)" respawn="true"/>

  <node pkg="topological_navigation" name="topological_navigation" type="navigation.py" output="screen" respawn="true">
    <param name="retries" type="int" value="$(arg topological_navigation_retries)"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="env_broadcaster" 
        args="0 0 0 0 0 0 /odom /map 200">
  </node>

  <!-- Needed by the MDP executor to predict traversal times for edges -->
  <node pkg="fremenserver" type="fremenserver" name="fremenserver" respawn="true"/>
  <node pkg="topological_navigation" name="execute_policy_server" type="execute_policy_server.py" output="screen" respawn="true"/>
  <node pkg="topological_navigation" type="topological_prediction.py" name="topological_prediction" output="screen" respawn="true"/>
</launch>
